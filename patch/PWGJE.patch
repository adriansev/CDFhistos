diff --git a/PWGJE/EMCALJetTasks/AliEmcalJetTask.h b/PWGJE/EMCALJetTasks/AliEmcalJetTask.h
index 3772cd1..7af0347 100644
--- a/PWGJE/EMCALJetTasks/AliEmcalJetTask.h
+++ b/PWGJE/EMCALJetTasks/AliEmcalJetTask.h
@@ -43,6 +43,7 @@ class AliEmcalJetTask : public AliAnalysisTaskSE {
 
   Bool_t                 IsLocked()                       { if(fLocked) {AliFatal("Jet finder task is locked! Changing properties is not allowed."); return kTRUE;} else return kFALSE;};
   void                   SetLocked()                      { fLocked = kTRUE;}
+  void                   SetUnlocked()                    { fLocked = kFALSE;}
   void                   SelectConstituents(UInt_t constSel, UInt_t MCconstSel)  { fConstSel = constSel; fMCConstSel = MCconstSel; };
   void                   SetAlgo(Int_t a)                 { if(IsLocked()) return; if (a==0) fJetType |= kKT; else fJetType |= kAKT; }  // for backward compatibility only
   void                   SetClusName(const char *n)       { if(IsLocked()) return; fCaloName      = n     ; }
diff --git a/PWGJE/EMCALJetTasks/AliJetContainer.h b/PWGJE/EMCALJetTasks/AliJetContainer.h
index ec7b790..d081199 100644
--- a/PWGJE/EMCALJetTasks/AliJetContainer.h
+++ b/PWGJE/EMCALJetTasks/AliJetContainer.h
@@ -52,7 +52,11 @@ class AliJetContainer : public AliEmcalContainer {
                                                                                      fJetAreaCut = p*TMath::Pi()*fJetRadius*fJetRadius; }
   void                        SetAreaEmcCut(Double_t a = 0.99)                     { fAreaEmcCut     = a                ; }
   void                        SetZLeadingCut(Float_t zemc, Float_t zch)            { fZLeadingEmcCut = zemc; fZLeadingChCut = zch ; }
+  void                        SetZLeadingEmcCut(Float_t zemc)                      { fZLeadingEmcCut = zemc; }
+  void                        SetZLeadingChCut(Float_t zch)                        { fZLeadingChCut = zch ; }
   void                        SetNEFCut(Float_t min = 0., Float_t max = 1.)        { fNEFMinCut = min; fNEFMaxCut = max;  }
+  void                        SetNEFMinCut(Float_t min = 0.)                       { fNEFMinCut = min; }
+  void                        SetNEFMaxCut(Float_t max = 1.)                       { fNEFMaxCut = max; }
   void                        SetFlavourCut(Int_t myflavour)                       { fFlavourSelection = myflavour;}
   void                        SetMaxClusterPt(Float_t b)                           { fMaxClusterPt   = b                ; }
   void                        SetMaxTrackPt(Float_t b)                             { fMaxTrackPt     = b                ; }
@@ -102,6 +106,17 @@ class AliJetContainer : public AliEmcalContainer {
   Float_t                     GetJetEtaMax()                        const    {return fJetMaxEta;}
   Float_t                     GetJetPhiMin()                        const    {return fJetMinPhi;}
   Float_t                     GetJetPhiMax()                        const    {return fJetMaxPhi;}
+  Float_t                     GetAreaCut()                          const    {return fJetAreaCut;}
+  Float_t                     GetEmcAreaCut()                       const    {return fAreaEmcCut;}
+  Float_t                     GetMaxClusterPt()                     const    {return fMaxClusterPt;}
+  Float_t                     GetMaxTrackPt()                       const    {return fMaxTrackPt;}
+  Float_t                     GetZLeadingEmcCut()                   const    {return fZLeadingEmcCut;}
+  Float_t                     GetZLeadingChCut()                    const    {return fZLeadingChCut;}
+  Float_t                     GetNEFMinCut()                        const    {return fNEFMinCut;}
+  Float_t                     GetNEFMaxCut()                        const    {return fNEFMaxCut;}
+  Int_t                       GetLeadingHadronType()                const    {return fLeadingHadronType;}
+  Int_t                       GetNLeadingJets()                     const    {return fNLeadingJets;}
+  UInt_t                      GetJetTrigger()                       const    {return fJetTrigger;}
   void                        SetClassName(const char *clname);
   void                        SetArray(AliVEvent *event);
   AliParticleContainer       *GetParticleContainer()                         {return fParticleContainer;}
