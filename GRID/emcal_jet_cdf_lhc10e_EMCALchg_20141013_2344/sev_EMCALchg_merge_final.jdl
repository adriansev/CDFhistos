# Generated merging jdl                     
# $1 = full alien path to output directory to be merged                     
# $2 = merging stage                     
# xml made via: find <OutputDir> *Stage<n-1>/*root_archive.zip
Jobtag = {
   "comment:sev_EMCALchg_FinalMerging"
};
# Collection of files to be merged for current stage

# Output directory
OutputDir = "$1";
# List of requested packages
Packages = {
   "VO_ALICE@AliRoot::vAN-20141014",
   "VO_ALICE@ROOT::v5-34-08-6",
   "VO_ALICE@APISCONFIG::V1.1x",
   "VO_ALICE@boost::v1_53_0",
   "VO_ALICE@cgal::v4.4",
   "VO_ALICE@fastjet::v3.0.6_1.012"
};
# List of input files to be uploaded to workers
InputFile = {
   "LF:/alice/cern.ch/user/a/asevcenc/lhc10e_EMCALchg/sev_EMCALchg_merge.C",
   "LF:/alice/cern.ch/user/a/asevcenc/lhc10e_EMCALchg/sev_EMCALchg.root",
   "LF:$1/Stage_$2.xml"
};
# This is the startup script
Executable = "/alice/cern.ch/user/a/asevcenc/lhc10e_EMCALchg/sev_EMCALchg_merge.sh";
# We split per SE for merging in stages
# Time after which the job is killed (240 min.)
TTL = "14400";
# Maximum number of input files to be merged in one go
# Format of input data
# Collection name to be processed on each worker node
# List of output files and archives
Output = {
   "log_archive.zip:std*@disk=1",
   "root_archive.zip:EventStat_temp*.root,AnalysisResults*.root,CDFanalysis*.root,*.stat@disk=2"
};
Arguments = "Stage_$2.xml $2";
# AliEn price for this job
Price = "1";
# Validation script to be run for each subjob
Validationcommand = "/alice/cern.ch/user/a/asevcenc/lhc10e_EMCALchg/sev_EMCALchg_validation_merge.sh";
User = "asevcenc";
Workdirectorysize = {"5000MB"};
